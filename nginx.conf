# +-------------------------------------------------------------------------+
# |    nginx.conf                               Nginx server config file    |
# +-------------------------------------------------------------------------+
# |                                                                         |
# |  You need to adjust the domain (example.com), the paths and the PHP     |
# |  configuration (see `location ~* \.php$` section).                      |
# |  Also check CORS and security header settings.                          |
# |                                                                         |
# |  Copy or link this server config in your nginx sites config dir, e.g.   |
# |  `/etc/nginx/sites-enabled/example.com.conf`                            |
# |                                                                         |
# +-------------------------------------------------------------------------+

server {
    listen 80;
    listen [::]:80;

    server_name example.com www.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [..]:443 ssl http2;

    # SSL config (lets encrypt example)
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # Enable server-side protection against BEAST attacks
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

    # RFC-7919 recommended: https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096
    ssl_dhparam /etc/nginx/dhparam-4096.pem;
    ssl_ecdh_curve secp521r1:secp384r1;

    # Basic stuff
    server_name example.com www.example.com;
    root /var/www/vhosts/example.com/htdocs;
    index index.php index.html;

    # Logs
    access_log /var/log/nginx/example_com_access.log;
    error_log /var/log/nginx/example_com_error.log;

    # Allow bigger uploads
    client_max_body_size 64M;
    proxy_max_temp_file_size 0;
    proxy_buffering off;

    # GZIP compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Hide nginx version / server details
    server_tokens off;

    # CORS
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Max-Age' '1000' always;
    add_header 'Access-Control-Allow-Headers' 'X-neo-token, X-neo-app, origin, authorization, accept, client-security-token, DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Security headers

    # Allow ifram embed of web site? "DENY" / "SAMEORIGIN" / "ALLOW-FROM https://..."
    add_header X-Frame-Options 'SAMEORIGIN' always;

    # Don't send referrer
    # add_header Referrer-Policy 'no-referrer' always;

    # X-XSS-Protection
    add_header X-XSS-Protection '1; mode=block' always;

    # Strict-Transport-Security (forcing HTTPS)
    # add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload' always;

    # Rewrite for index file
    location / {
        # Preflight support
        if ($request_method = 'OPTIONS') {
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        rewrite ^(.+)/+$ $1 permanent;
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP
    location ~* \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Expire rules for static content

    # Feed
    location ~* \\.(?:rss|atom)$ {
    	expires 1h;
    	add_header Cache-Control "public";
    }

    # Media: images, icons, video, audio, HTC
    location ~* \\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    	expires 1M;
    	access_log off;
    	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    	try_files $uri @fallback;
    }

    # CSS and Javascript
    location ~* \\.(?:css|js)$ {
    	expires 1M;
    	access_log off;
    	add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    	try_files $uri @fallback;
    }

    # Protect sensitive files
    location ~* \.(yml|yaml|twig|log|lock|cache)$|^(\..*|composer|package)$|\.php_
    {
    	deny all;
        error_page 403 =404 / ;
    }
}